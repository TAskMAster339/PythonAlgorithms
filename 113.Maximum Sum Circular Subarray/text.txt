113) Maximum Sum Circular Subarray
https://leetcode.com/problems/maximum-sum-circular-subarray/description/
Условие:
Дан цикличный массив целых чисел nums длины n, нужно вернуть максимально возможную сумму непустого подмассива nums.
Циклический массив означает, что перед 0 элементом идет последний. После последнего идет 0 элемент.
В подмассиве каждый элемент может встречаться только один раз
Идея:
Нужно допилить алгоритм Кадане для этого циклического массива
Реализация:
    Подмассив с максимальной суммой может быть расположен либо в центре массива, то есть без зацикливания, либо с краю массива, тогда у нас по факту он будет разделен на два массива, один будет у левого края массива, другой будет у правого края массива.
    Очень интересно теперь подумать, что за подмассив в этом случае располагается по середине массива. Очевидно, что по центру будет расположен подмассив с минимальной суммой. (Это так, потому что только в этом случае, наши крайние массивы будут обладать наибольшей суммой).
    Тогда применим алгоритм Кадане для поиска двух подмассивов в исходном. Первый подмассив будет иметь максимальную сумму, второй минимальную сумму.
    В конце необходимо вернуть максимум из суммы максимального подмассива и разности суммы массива и суммы минимального подмассива (sum_max = sum_total - sum_min)
    Еще стоит не забыть про очень неприятный случай, когда все числа в массиве отрицательные, в этом случае нужно просто вернуть максимальную сумму подмассива. (sum_total - sum_min, если sum_min == sum_total окажется равным 0, что помешает корректно посчитать максимум).

Оценка:
    Сложность по времени будет O(N), где N - количество элементов в массиве.
    Сложность по памяти будет O(1), так как мы создаем всего лишь 5 переменных.