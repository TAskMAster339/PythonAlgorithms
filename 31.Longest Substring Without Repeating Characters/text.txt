31) Longest Substring Without Repeating Characters
https://leetcode.com/problems/longest-substring-without-repeating-characters/description/
Условие:
Дана строка s, нужно найти длину наибольшей подстроки, в которой все символы уникальны.
Подстрока - непрерывная непустая последовательность символов в строке.
Идея:
Уникальные символы намекают на множество
Реализация:
    Если строка имеет длину <= 1, то мы возвращаем саму длину. Теперь, когда мы обработали крайний случай, создадим переменную max_len для подсчета максимальной длины подстроки. Указатель start, который будет использоваться для подсчета длины максимальной подстроки. Также множество letter_set.
    Теперь с помощью цикла пройдемся по символам строки. Если символ не в множестве, то мы его туда добавляем, при этом пересчитывая max_len. Если символ есть в множестве, то мы удаляем все предыдущие символы s[start] до тех пор, пока не сможем добавить символ в множество.
    После цикла возвращаем max_len.

Оценка:
    Множество размером M обычно реализуется каким-либо бинарным деревом поиска, в котором все операции выполняются за O(log M) по времени, каждую итерацию цикла длинной N мы будем выполнять как минимум одну такую операцию, поэтому сложность в наихудшем случае будет O(N * log M). Но так как символы - элементы английского алфавита + цифры + пробел, получим M = 37, следовательно O(6.1 * N), что равно O(N). По памяти мы потратим O(M), так как в наихудшем случае мы будем хранить весь алфавит. Но так как M много меньше по сравнению с N, то итоговая граница будет O(1).