115) Search a 2D Matrix
https://leetcode.com/problems/search-a-2d-matrix/description/
Условие:
Дана матрица целых чисел matrix размером M x N с следующими особенностями. Каждая строка отсортирована в неубывающем порядке. Первое число каждой строки больше последнего числа предыдущей.
Дано число target. Нужно вернуть True, если оно есть в матрице, иначе False.
Необходимо сделать это за O(log(N * M))
Идея:
Бинарный поиск в матрице. А еще если вспомнить, что log(N * M) = log(N) + log(M), то понятно, что это просто два последовательных бинарных поиска
Реализация:
    Сделаем сначала бинарный поиск строки, в которой может быть наше число. Из условия мы можем понять, что мы можем с помощью последнего или первого числа в строке определить искомый ряд.
    После этого тем же бинарным поиском ищем наше число в найденной строке. Если нашли, возвращаем True. Иначе False.

Оценка:
    По времени два бинарных поиска займут O(log(M * N)), где M - количество строк в матрице, N - количество столбцов.
    По памяти мы затратим O(1), так не создаем какие-либо вспомогательные структуры данных.