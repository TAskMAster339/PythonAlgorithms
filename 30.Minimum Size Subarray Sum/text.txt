30) Minimum Size Subarray Sum
https://leetcode.com/problems/minimum-size-subarray-sum/description/
Условие:
Дан массив натуральных чисел nums и число target, нужно вернуть минимальную длину подмассива, сумма котором больше или равна target. Если такого подмассива нет, нужно вернуть 0.
Подмассив - это непрерывная непустая последовательность элементов внутри массива. Например, [1,2,3,4,5] -> [3,4,5]
Идея:
Будем с помощью двух указателей искать наименьший подмассив
Реализация:
    Создадим указатели left = 0 и right = 0, также переменную cur_sum = nums[left], в которой динамически будем считать сумму. В min_len мы будем хранить наименьшую длину подмассива.
    В цикле будем проверять: если cur_sum >= target, то обновлям min_len и двигаем левый указатель, не забывая изменить при этом сумму. Иначе мы двигаем правый указатель, добавляя его значение в сумму.

Оценка:
    Один цикл говорит о верхней границы по времени в O(N), также было задействовано константное количество памяти O(1).