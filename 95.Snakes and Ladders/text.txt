95) Snakes and Ladders
https://leetcode.com/problems/snakes-and-ladders/description/
Условие:
Дана матрица целых чисел board размером n на n, каждая клетка матрицы отмечена числом от 1 до n^2 в порядке зигзага, начиная с левого нижнего угла.
Вы начинаете с 1 клетки. Чтобы сделать ход вы бросаете кубик, следующая клетка лежит в таком диапазоне [current + 1, min(current + 6, n^2)], где current - текущая клетка.
Также на доске есть клетки с лестницами и змеями. Если вы попадаете на такую клетку, то вы перемещаетесь по лестнице или по змее.
Необходимо вернуть минимальное количество бросков кубика, которых хватит, чтобы дойти до клетки под номером n^2. Если это невозможно, верните -1
Идея:
Эту игру можно представить в виде графа, тогда решение - поиск наикратчайшего пути в графе.
Реализация:
    В начале создадим массив dist размером n^2 + 1, в котором по i-тому индексу мы будем хранить наименьшие количество бросков кубика, чтобы достигнуть i-той ячейки. По умолчанию заполним -1.
    Для начала запишем значение 0 в стартовую ячейку и добавим эту ячейку в очередь.
    С помощью очереди реализуем BFS. Достаем нашу клетку из очереди и рассматриваем следующие возможные 6 клеток для хода. Мы рассчитываем индексы следующей клетки в матрице и с помощью этого вычисляем значение, которое лежит в следующей клетке. Если оно не равно -1, то мы попали на лестницу или змею, значит мы при ходе в эту клетку поднимаемся по лестнице или спускаемся по змее. С помощью этого значение, если мы еще не знаем путь в эту клетку, то записываем в dist[move] = dist[current] + 1. И добавляем клетку move в очередь.
    В конце остается проверить является ли current клетка искомой, если да, то возвращаем dist[current].
    (Если интересно, почему такой путь будет всегда наикратчайшим (с наименьшим количеством бросков кубика), то посмотрите на алгоритм Дейкстры, я неявно использовал его правило).

Оценка:
    Верхняя граница по времени будет O(N^2), потому что мы пройдем по всем клеткам доски, чтобы посчитать все возможные пути. По памяти мы будет хранить массив dist, который имеет размер N^2 + 1, поэтому асимптотическая оценка по памяти будет O(N^2).