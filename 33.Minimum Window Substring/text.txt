33) Minimum Window Substring
https://leetcode.com/problems/minimum-window-substring/description/
Условие:
Даны две строки s и t длины m и n соответственно, нужно вернуть минимальное окно с подстрокой строки s, такое что каждый символ в t (включая дубликаты) находится в окне. Если такой подстроки нет, нужно вернуть пустую строку. Гарантируется, что решение единственное.
Идея:
Так как в строке t могут быть дубликаты, то мы опять реализуем окно через хэш-таблицу.
Реализация:
    Если длина строка s меньше строки t, то возвращаем пустую строку. Далее создадим хэш-таблицу char_table (Я воспользовался классом defaultdict из collections, который при обращении по какому-либо ключу, который отсутствует в таблице, присваивает ему значение по умолчанию ). Заполняем её частотами букв строки t.
    Теперь создадим переменную remaining_chars = len(t), которая будет нужна для окна, min_window = float("inf"), длина минимального окна, start = 0, указатель на начало окна.
    После этого в цикле с помощью переменной итерации end (указатель на конец окна) получим символ s[end]. Если char_talbe[char] > 0, значит это нужный нам символ, декрементируем remaining_chars и char_table[char].
    Вот тут хочу пояснить, что означают числа в нашей таблице: если число больше 0, то это значит дефицит данной буквы в окне, равно 0 - у нас ровно одна нужная буква, меньше 0 - у нас есть еще такие буквы в запасе в окне.
    Осталось теперь зафиксировать результат, когда remaining_chars == 0 минимизируем полученное окно, для этого есть внутренний цикл, который только двигает левый указатель настолько, насколько это возможно. Затем вычисляем минимум и соответствующую ему минимальную строку, после этого двигаем окно на единицу. В конце возвращаем минимальную строку.   

Оценка:
    Сложность по времени будет O(N + M), так как у нас есть два последовательных цикла в N и M итераций. (Внутренний цикл имеет асимптотику O(1)). По памяти мы потратим O(1), так как нам нужны будут только маленькие английские буквы. (В наихудшем случае в хэш-таблице будет 26 ключей и значений)