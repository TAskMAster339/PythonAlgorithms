69) Same Tree
https://leetcode.com/problems/same-tree/description/
Условие:
Даны два корня бинарных деревьев p и q. Нужно реализовать функцию, которая проверяет одинаковы ли они или нет. Одинаковыми деревья считаются, если они имеют идентичную структуру и все соответствующие узлы имеют одинаковые значения
Идея:
Тот же DFS только теперь будем проверять идентичность
Реализация:
    Пойдем также рекурсией. Для начала определим рекуррентный случай: бинарные деревья равные, если их левые и правые поддеревья равны.
    Если значения узлов p и q не равны, возвращаем False, иначе возвращаем логическое И вызовов нашей функции для левого и правого поддеревьев p и q соответственно.
    Теперь становиться очевидным крайний случай: если два узла p и q являются None, значит мы дошли до одного из листьев дерева, при этом не встретив разные значения в узлах, значит эта цепь узлов одинаковая у деревьев, можно возвращать True.
    Если один из узлов p или q является None, то мы нашли несоответствие в цепи узлов, значит одно дерево длиннее другого, возвращаем False. 

Оценка:
    По времени асимптотическая сложность равна O(N), где N - количество узлов, так как нам всегда нужно будет пройти все N узлов. По памяти O(1), но не забываем про стек рекурсии (см. 68 задачу)
    