34) Valid Sudoku
https://leetcode.com/problems/valid-sudoku/description/
Условие:
Дана матрица 9x9, которая представляет собой судоку. Нужно проверить удовлетворяет ли она правилам судоку:
1) Каждый слой должен содержать цифры от 1 до 9 без повторений
2) Каждый столбец должен содержать цифры от 1 до 9 без повторений
3) Каждый из девяти 3x3 под-судоку должен содержать цифры от 1 до 9 без повторений
Символ "." используется для обозначение пустого места, его проверять не нужно.
Идея:
Проверить все правила судоку.
Реализация:
    Первое мое решение сделано через 3 функции, каждая из которой проходит по матрице и проверяет отведенное ей условие, затем с помощь логического "И" мы объединяем их результаты и возвращаем.
    Но более интересно сделать это за один проход по матрице. Для этого придется задействовать дополнительную память. Создадим для каждого столбца, каждой строки, каждого кубика свое множество.
    Теперь проходя по матрице мы будем проверять: находится ли board[i][j] элемент в rows[i], или в columns[j], или в cubes[cube_index] (Индекс куба вычисляем по следующий формуле 3 * (i // 3) + j // 3).
    Если элемент находится в хотя бы одном множестве возвращаем False, иначе добавляем этот элемент в эти три множества, продолжаем цикл.
    В конце возвращаем True 

Оценка:
    По времени мы потратим O(1), хотя на самом деле это будет O(N^2), так как перебор всех элементов матрицы стоит N^2 действий, но по правилам судоку матрица будет константного размера 9^2, следовательно O(81) = O(1), по памяти мы потратим тоже O(1) (Здесь то же самое, если бы матрица не была бы 9x9, то мы бы затратили O(3 * N^2) = O(N^2) (3 массива, где в массиве N множеств, а в множестве N элементов)).
    Еще внизу я прикреплю время работы двух решений. Их асимптотическое время одинаковое, оба по O(1), но фактическое время работы отличается. Нашли закономерность?